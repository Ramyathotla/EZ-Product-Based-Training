m=10
arr=[1,8,4,3,5,2,6,10,9]
[1-m]
temp_arr=
key      value
1         0
8         0
3         0
5         0
2         0

m=10
arr=[2,4,6,1,3,5,8,10,9]
ans=0
(1^2^3^4^5^6^7^8^9^10)^(2^4^6^1^3^5^8^10^9)
0^0---^7=0^7=7

m=10
arr=[2,1,4,6,6,5,8,10,9,7]
[1-m]
x^y=3^6 ->[2,1,8,10,9]=8
6^y=10 ->[4,6,6,5,7]=
x+y=10
code:-

two pointer:-
def two_pointer(arr,target):
    arr,sort()
    i,j=0,len(arr)-1
    while i<j:
        if arr[i]+arr[j]==target:
            return True
        if arr[i]+arr[j]<target:
            i+=1
        if arr[i]+arr[j]>target:
            j-=1
    return False

query subarray sum:-
def query_subarray_sum(arr,queries):
    n=len(arr)
    ps=[0 for i in range(n)]
    for i in range(n):
        if i==0:
            ps[i]=arr[i]
        else:
            ps[i]=ps[i-1]+arr[i]
    for query in queries:
        i=query[0]
        j=query[1]
        if i==0:
